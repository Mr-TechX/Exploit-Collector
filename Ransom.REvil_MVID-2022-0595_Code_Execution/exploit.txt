Threat: Ransom.REvil
Vulnerability: Code Execution
Description: REvil looks for and executes DLLs in its current directory. Therefore, we can hijack a vuln DLL, execute our own code, control and terminate the malware pre-encryption. The exploit dll checks if the current directory is "C:\Windows\System32", if not we grab our process ID and terminate. We do not need to rely on hash signatures or third-party products, the malwares flaw does the work for us. Endpoint protection systems and or antivirus can potentially be killed prior to executing malware, but this method cannot as there's nothing to kill the DLL just lives on disk waiting. From a defensive perspective you can add the DLLs to a specific network share containing important data as a layered approach. All basic tests were conducted successfully in a virtual machine environment.
Family: REvil
Type: PE32
MD5: 7a96d7a1f28bfb6ae36a15263a8a7135
Vuln ID: MVID-2022-0595
Disclosure: 05/12/2022


Exploit/PoC:
1) Compile the following C code as "winhttp.dll" 32-bit
2) Place the DLL in same directory as the ransomware
3) Optional - Hide it: attrib +s +h "winhttp.dll"
4) Run the malware

#include "windows.h"

//By malvuln
//gcc -c winhttp.c -m32
//gcc -shared -o winhttp.dll winhttp.o -m32
//Purpose: Exploit REvil
/** DISCLAIMER:
Author is NOT responsible for any damages whatsoever by using this software or improper malware
handling. By using this code you assume and accept all risk implied or otherwise.
**/
BOOL APIENTRY DllMain(HINSTANCE hInst, DWORD reason, LPVOID reserved){
  switch (reason) {
  case DLL_PROCESS_ATTACH:
   MessageBox(NULL, "REvil\nPWNED By MALVULN", "Code Exec PoC", MB_OK);
   TCHAR buf[MAX_PATH];
   if(GetCurrentDirectory(MAX_PATH, buf))
   if(strcmp("C:\\Windows\\System32", buf) != 0){
   	 HANDLE handle = OpenProcess(PROCESS_TERMINATE, FALSE, getpid());
     if (NULL != handle) {   
        TerminateProcess(handle, 0);
       CloseHandle(handle);
     }
   }
    break;
  }
  return TRUE;
}



Disclaimer: The information contained within this advisory is supplied "as-is" with no warranties or guarantees of fitness of use or otherwise. Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information or exploits by the author or elsewhere. Do not attempt to download Malware samples. The author of this website takes no responsibility for any kind of damages occurring from improper Malware handling or the downloading of ANY Malware mentioned on this website or elsewhere. All content Copyright (c) Malvuln.com (TM).
